package main

import (
	"fmt"
	"math/rand"
	"time"
)

func main() {
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
	rand.Seed(time.Now().UnixNano())

	// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
	fmt.Println("–ü—Ä–∏–≤–µ—Ç! –¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –∑–∞–ø—É—Å—Ç–∏–ª –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–∞ Go. –≠—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è —É–≥–æ–≤–æ—Ä–∏—Ç—å —Ç–µ–±—è –∏–∑—É—á–∞—Ç—å —ç—Ç–æ—Ç —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–π —è–∑—ã–∫!")

	// –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞—Ç—å "—Å–æ–≤–µ—Ç" –∏–ª–∏ "—Ñ–∞–∫—Ç" –æ Go
	encouragement := rand.Intn(5)
	switch encouragement {
	case 0:
		fmt.Println("–ó–Ω–∞–µ—à—å –ª–∏ —Ç—ã, —á—Ç–æ Go –±—ã–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –≤ Google? –û–Ω–∏ —Å–æ–∑–¥–∞–ª–∏ –µ–≥–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –¥–µ–ª–∞—Ç—å –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã–µ –∏ –±—ã—Å—Ç—Ä—ã–µ —Å–∏—Å—Ç–µ–º—ã!")
	case 1:
		fmt.Println("Go –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤. –ü—Ä–æ—Å—Ç–æ—Ç–∞ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∏ –æ—Ç–ª–∏—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–∞—Ä–∞–ª–ª–µ–ª–∏–∑–º–∞ –¥–µ–ª–∞—é—Ç –µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º!")
	case 2:
		fmt.Println("–¢—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ –≤ Go –µ—Å—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≥–æ—Ä—É—Ç–∏–Ω? –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç—ã—Å—è—á–∏ –æ–ø–µ—Ä–∞—Ü–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –±–µ–∑ –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏!")
	case 3:
		fmt.Println("Go –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –∑–∞ –¥–æ–ª–∏ —Å–µ–∫—É–Ω–¥—ã! –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –±—ã—Å—Ç—Ä–æ –ø–æ–ª—É—á–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –ø—Ä–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")
	case 4:
		fmt.Println("Go –∏–º–µ–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Å–±–æ—Ä–∫—É –º—É—Å–æ—Ä–∞. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —Ç–µ–±–µ –Ω–µ –Ω—É–∂–Ω–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è –æ –ø–∞–º—è—Ç–∏ –≤ —Å–≤–æ–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö!")
	}

	// –í–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å
	fmt.Println("\n–ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π —É–∑–Ω–∞–µ–º, —á—Ç–æ —Ç—ã –¥—É–º–∞–µ—à—å –æ Go! –ï—Å–ª–∏ —Ç—ã –¥—É–º–∞–µ—à—å, —á—Ç–æ Go –∫—Ä—É—Ç–æ–π, –Ω–∞–ø–∏—à–∏ '–î–∞', –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî '–ù–µ—Ç'.")

	var response string
	fmt.Scanln(&response)

	if response == "–î–∞" || response == "–¥–∞" {
		fmt.Println("\n–¢—ã –º–æ–ª–æ–¥–µ—Ü! Go —Å—Ç–æ–∏—Ç –∏–∑—É—á–∞—Ç—å ‚Äî –æ–Ω –±—ã—Å—Ç—Ä—ã–π, –ø—Ä–æ—Å—Ç–æ–π –∏ –º–æ—â–Ω—ã–π!")
	} else if response == "–ù–µ—Ç" || response == "–Ω–µ—Ç" {
		fmt.Println("\n–ñ–∞–ª—å! –ù–æ –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π ‚Äî –º–æ–∂–µ—Ç, —Ç—ã –µ—â–µ –∏–∑–º–µ–Ω–∏—à—å —Å–≤–æ–µ –º–Ω–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ —É–∑–Ω–∞–µ—à—å –≤—Å–µ –µ–≥–æ —Ñ–∏—à–∫–∏!")
	} else {
		fmt.Println("\n–≠—Ç–æ –±—ã–ª–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ! –¢–∞–∫ –∏–ª–∏ –∏–Ω–∞—á–µ, Go ‚Äî —ç—Ç–æ –∫—Ä—É—Ç–æ–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∏ —Ç—ã —Ç–æ—á–Ω–æ —á—Ç–æ-—Ç–æ –ø–æ–ª–µ–∑–Ω–æ–µ –∏–∑ –Ω–µ–≥–æ –≤—ã–Ω–µ—Å–µ—à—å!")
	}

	// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–º–Ω–æ–≥–æ –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Ü–µ
	fmt.Println("\n–ò –ø–æ–º–Ω–∏: –ª—É—á—à–µ –∏–∑—É—á–∞—Ç—å Go —Å–µ–≥–æ–¥–Ω—è, —á–µ–º –∂–∞–ª–µ—Ç—å, —á—Ç–æ –Ω–µ –Ω–∞—á–∞–ª –≤—á–µ—Ä–∞! üòâ")
}
